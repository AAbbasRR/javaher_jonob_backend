# Generated by Django 5.0.4 on 2024-04-10 13:25

import django.core.validators
import django.db.models.deletion
import utils.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("app_customer", "0001_initial"),
        ("app_product", "0001_initial"),
        ("app_store", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Factor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created Time"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated Time"),
                ),
                (
                    "tracking_code",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        unique=True,
                        verbose_name="Tracking Code",
                    ),
                ),
                (
                    "is_accepted",
                    models.BooleanField(default=False, verbose_name="Is Accepted"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("check", "Check"),
                            ("cash", "Cash"),
                            ("installment", "Installment"),
                        ],
                        max_length=11,
                        verbose_name="Payment Type",
                    ),
                ),
                (
                    "payment_status",
                    models.BooleanField(default=False, verbose_name="Payment Status"),
                ),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="customer_address_factors",
                        to="app_customer.customeraddress",
                        verbose_name="Address",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="customer_factors",
                        to="app_customer.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "marketer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="marketer_factors",
                        to="app_customer.customer",
                        verbose_name="Marketer",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="store_factors",
                        to="app_store.store",
                        verbose_name="Store",
                    ),
                ),
            ],
            options={
                "ordering": ["create_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FactorItems",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created Time"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated Time"),
                ),
                (
                    "price",
                    utils.db.fields.PriceField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "tax",
                    utils.db.fields.PercentField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Tax",
                    ),
                ),
                (
                    "count",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Count",
                    ),
                ),
                (
                    "factor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="factor_items",
                        to="app_factor.factor",
                        verbose_name="Factor",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="product_factors",
                        to="app_product.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "ordering": ["create_at"],
                "abstract": False,
            },
        ),
    ]
